# Stubs for gnewcash.gnucash_file (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from decimal import Decimal
from gnewcash.account import Account
from gnewcash.commodity import Commodity
from gnewcash.guid_object import GuidObject
from gnewcash.slot import Slot, SlottableObject
from gnewcash.transaction import ScheduledTransaction, Transaction, TransactionManager
from typing import Any, List, Optional

class GnuCashFile:
    books: Any = ...
    file_name: Any = ...
    def __init__(self, books: Optional[List[Book]]=...) -> None: ...
    @classmethod
    def read_file(cls: Any, source_file: str, file_format: Any, sort_transactions: bool=...) -> GnuCashFile: ...
    def build_file(self, target_file: str, file_format: Any, prettify_xml: bool=...) -> None: ...

class Book(GuidObject, SlottableObject):
    root_account: Any = ...
    transactions: Any = ...
    commodities: Any = ...
    slots: Any = ...
    template_root_account: Any = ...
    template_transactions: Any = ...
    scheduled_transactions: Any = ...
    budgets: Any = ...
    def __init__(self, root_account: Optional[Account]=..., transactions: Optional[TransactionManager]=..., commodities: Optional[List[Commodity]]=..., slots: Optional[List[Slot]]=..., template_root_account: Optional[Account]=..., template_transactions: Optional[List[Transaction]]=..., scheduled_transactions: Optional[List[ScheduledTransaction]]=..., budgets: Optional[List[Budget]]=...) -> None: ...
    def get_account(self, *paths_to_account: str, **kwargs: Any) -> Optional[Account]: ...
    def get_account_balance(self, account: Account) -> Decimal: ...

class Budget(GuidObject, SlottableObject):
    name: Any = ...
    description: Any = ...
    period_count: Any = ...
    recurrence_multiplier: Any = ...
    recurrence_period_type: Any = ...
    recurrence_start: Any = ...
    def __init__(self) -> None: ...
